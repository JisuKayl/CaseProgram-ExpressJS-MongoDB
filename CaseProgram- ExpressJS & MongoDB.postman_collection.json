{
	"info": {
		"_postman_id": "3a8be3be-594e-4f90-98b2-9259413335c9",
		"name": "CaseProgram- ExpressJS & MongoDB",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38134634"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "localhost:3000/users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/users/:id1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/users/:id1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								":id1"
							],
							"variable": [
								{
									"key": "id1",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/users/:id2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/users/:id2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								":id2"
							],
							"variable": [
								{
									"key": "id2",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/accessToken",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/accessToken",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"accessToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/refreshToken",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/refreshToken",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"refreshToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/signup",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dateNow = new Date();\r",
									"pm.environment.set('currentDate', dateNow.toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"New\",\r\n    \"lastName\": \"User\",\r\n    \"age\": 25,\r\n    \"contactNum\": \"09123451234\",\r\n    \"username\": \"New user\",\r\n    \"email\": \"newuser@gmail.com\",\r\n    \"password\": \"newuser1\",\r\n    \"userRole\": \"User\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/signup",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `\r",
									"<style type=\"text/css\">\r",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
									"    .tftable tr {background-color:#ffffff;}\r",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
									"    .tftable tr:hover {background-color:#e0ffff;}\r",
									"</style>\r",
									"\r",
									"<table class=\"tftable\" border=\"1\">\r",
									"    <tr>\r",
									"        <th>User Exist</th>\r",
									"        <th>First Name</th>\r",
									"        <th>Last Name</th>\r",
									"        <th>Age</th>\r",
									"        <th>Contact Number</th>\r",
									"        <th>Username</th>\r",
									"        <th>Email</th>\r",
									"        <th>Password</th>\r",
									"        <th>User Role</th>\r",
									"        <th>Created At</th>\r",
									"        <th>Updated At</th>\r",
									"    </tr>\r",
									"    <tr>\r",
									"        <td>{{response.userExist._id}}</td>\r",
									"        <td>{{response.userExist.firstName}}</td>\r",
									"        <td>{{response.userExist.lastName}}</td>\r",
									"        <td>{{response.userExist.age}}</td>\r",
									"        <td>{{response.userExist.contactNum}}</td>\r",
									"        <td>{{response.userExist.username}}</td>\r",
									"        <td>{{response.userExist.email}}</td>\r",
									"        <td>{{response.userExist.password}}</td>\r",
									"        <td>{{response.userExist.userRole}}</td>\r",
									"        <td>{{response.userExist.createdAt}}</td>\r",
									"        <td>{{response.userExist.updatedAt}}</td>\r",
									"    </tr>\r",
									"</table>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return { response: pm.response.json() }\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dateNow = new Date();\r",
									"pm.environment.set('currentDate', dateNow.toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// //Role: ADMIN\r\n{\r\n    \"email\": \"jerson@gmail.com\",\r\n    \"password\": \"jk123\"\r\n}\r\n\r\n// Role: USER\r\n// {\r\n//     \"email\": \"juan@gmail.com\",\r\n//     \"password\": \"juan123\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/login",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:3000/logout",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/users/:id1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dateNow = new Date();\r",
									"pm.environment.set('currentDate', dateNow.toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/:id1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								":id1"
							],
							"variable": [
								{
									"key": "id1",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/users/:id2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dateNow = new Date();\r",
									"pm.environment.set('currentDate', dateNow.toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/users/:id2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								":id2"
							],
							"variable": [
								{
									"key": "id2",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/users",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/users",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/users/:id1",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/users/:id1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								":id1"
							],
							"variable": [
								{
									"key": "id1",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/users/:id2",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/users/:id2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								":id2"
							],
							"variable": [
								{
									"key": "id2",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "cases",
			"item": [
				{
					"name": "localhost:3000/cases",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/cases",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cases"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/cases/:id1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/cases/:id1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cases",
								":id1"
							],
							"variable": [
								{
									"key": "id1",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/cases/:id2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/cases/:id2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cases",
								":id2"
							],
							"variable": [
								{
									"key": "id2",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/cases",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dateNow = new Date();\r",
									"pm.environment.set('currentDate', dateNow.toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fileNumber\": \"035-01-CA3\",\r\n    \"caseTitle\": \"Complainant vs Respondent3\",\r\n    \"caseNumber\": 15,\r\n    \"caseStatus\": \"ACTIVE\",\r\n    \"kindOfCase\": \"Civil1\",\r\n    \"courtCase\": \"Court of Appeals3\",\r\n    \"engagedDate\": \"{{currentDate}}\",\r\n    \"location\": \"PAMPANGA\",\r\n    \"clientName\": \"Sample Name\",\r\n    \"hearings\" : [\"66e78bf0ff24cf5dca9b6823\", \"66e79003924d1dae8dada152\"]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/cases",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cases"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/cases/:id1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dateNow = new Date();\r",
									"pm.environment.set('currentDate', dateNow.toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/cases/:id1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cases",
								":id1"
							],
							"variable": [
								{
									"key": "id1",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/cases/:id2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dateNow = new Date();\r",
									"pm.environment.set('currentDate', dateNow.toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/cases/:id2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cases",
								":id2"
							],
							"variable": [
								{
									"key": "id2",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/cases",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/cases",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cases"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/cases/:id1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/cases/:id1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"cases",
								":id1"
							],
							"variable": [
								{
									"key": "id1",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/cases/:id2",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/case/:id2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"case",
								":id2"
							],
							"variable": [
								{
									"key": "id2",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "hearings",
			"item": [
				{
					"name": "localhost:3000/hearings",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/hearings",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"hearings"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/hearings/:id1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/hearings/:id1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"hearings",
								":id1"
							],
							"variable": [
								{
									"key": "id1",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/hearings/:id2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/hearings/:id2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"hearings",
								":id2"
							],
							"variable": [
								{
									"key": "id2",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/hearings",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dateNow = new Date();\r",
									"pm.environment.set('currentDate', dateNow.toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"hearingName\": \"Hearing 4\",\r\n    \"hearingDate\": \"2024-10-10\",\r\n    \"hearingNumber\": 4,\r\n    \"caseId\":\"66e794ca3ffd4c34b18996a6\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/hearings",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"hearings"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/hearings/:id1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dateNow = new Date();\r",
									"pm.environment.set('currentDate', dateNow.toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/hearing/:id1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"hearing",
								":id1"
							],
							"variable": [
								{
									"key": "id1",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/hearings/:id2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dateNow = new Date();\r",
									"pm.environment.set('currentDate', dateNow.toISOString());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3000/hearings/:id2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"hearings",
								":id2"
							],
							"variable": [
								{
									"key": "id2",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/hearings",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/hearings",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"hearings"
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/hearings/:id1",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/hearings/:id1",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"hearings",
								":id1"
							],
							"variable": [
								{
									"key": "id1",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "localhost:3000/hearings/:id2",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/hearings/:id2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"hearings",
								":id2"
							],
							"variable": [
								{
									"key": "id2",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}